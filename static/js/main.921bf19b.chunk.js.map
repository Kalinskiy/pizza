{"version":3,"sources":["components/Button.tsx","assets/img/pizza-logo.svg","components/Header.tsx","components/Categories.tsx","components/SortPopup.tsx","components/PizzaBlock.tsx","components/PizzaLoadingBlock.tsx","redux/filters-reducer.ts","api/api.js","redux/app-reducer.ts","redux/pizza-reducer.ts","redux/cart-reducer.ts","pages/Home.tsx","components/CartItem.tsx","assets/img/empty-cart.png","components/CartEmpty.tsx","pages/Cart.tsx","App.tsx","reportWebVitals.js","redux/store.ts","index.tsx"],"names":["Button","onClick","className","outline","children","classNames","Header","useSelector","state","cart","totalPrice","totalCount","width","src","logo","alt","to","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Categories","React","memo","activeCategory","items","onClickCategory","map","item","index","SortPopup","activeSort","onClickSortType","useState","isVisiblePopup","setIsVisiblePopup","sortRef","useRef","activeLabel","find","obj","type","name","handleOutsideClick","e","path","composedPath","includes","current","useEffect","document","body","addEventListener","ref","setActiveItemHandle","PizzaBlock","id","imageUrl","sizes","price","types","onClickAddPizza","addedCount","availableTypes","availableSizes","activeType","setActiveType","activeSize","setActiveSize","t","onSelectType","active","disabled","s","changeSizeHandle","size","PizzaLoadingBlock","props","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","initialState","sortBy","order","category","filtersReducer","action","payload","pizzaAPI","axios","get","then","res","data","isLoaded","appReducer","setPreloader","preloader","pizzas","getTotalPrice","arr","reduce","sum","getTotalSum","Object","values","split","firstKey","val","key","_get","cartReducer","currentPizzaItems","newItems","currentTotalPrice","currentTotalCount","length","newObjectItems","oldItems","slice","Home","dispatch","useDispatch","pizza","cartItems","app","filter","a","fetchPizzas","onSelectCategory","useCallback","onSelectSortType","handleAddPizza","addPizza","Array","_","CartItem","removePizzaItem","plusCartItem","minusCartItem","CartEmpty","emptyCartImage","Cart","addedPizzas","keys","removeCartItem","plusItem","minusItem","alert","App","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.921bf19b.chunk.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames'\r\n\r\ntype PropsType = {\r\n    onClick?: () => void\r\n    className: string\r\n    outline?: string | boolean\r\n    children: React.ReactNode\r\n}\r\nconst Button = ({onClick, className, outline, children}: PropsType) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className={classNames('button', className, {\r\n                'button--outline': outline,\r\n            })}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;","export default __webpack_public_path__ + \"static/media/pizza-logo.56ac8703.svg\";","import React from 'react';\r\nimport Button from \"./Button\";\r\nimport logo from '../assets/img/pizza-logo.svg'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/store\";\r\nimport {CartStateType} from \"../redux/cart-reducer\";\r\n\r\n\r\nconst Header = () => {\r\n    const {totalPrice, totalCount} = useSelector<AppStateType, CartStateType>(state => state.cart)\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"header__logo\">\r\n                    <img width=\"38\" src={logo} alt=\"Pizza logo\"/>\r\n                    <div>\r\n                        <h1>React Pizza</h1>\r\n                        <p>самая вкусная пицца во вселенной</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"header__cart\">\r\n                    <NavLink to={'/cart'}>\r\n                        <Button className='button--cart'>\r\n                            <span>{totalPrice} ₽</span>\r\n                            <div className=\"button__delimiter\">\r\n                            </div>\r\n                            <svg\r\n                                width=\"18\"\r\n                                height=\"18\"\r\n                                viewBox=\"0 0 18 18\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                            </svg>\r\n                            <span>{totalCount}</span>\r\n                        </Button>\r\n                    </NavLink>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\ntype PropsType = {\r\n    activeCategory: number | null,\r\n    onClickCategory: (index: number | null) => void\r\n    items: Array<string>\r\n\r\n}\r\n\r\nconst Categories = React.memo(({activeCategory, items, onClickCategory}: PropsType) => {\r\n    return (\r\n        <div className=\"categories\">\r\n            <ul>\r\n                <li className={activeCategory === null ? 'active' : ''} onClick={() => onClickCategory(null)}>Все</li>\r\n                {items && items.map((item, index) => {\r\n                    return <li className={activeCategory === index ? 'active' : ''}\r\n                               key={`${item}_${index}`} //key по индексу с именем для уникализации ключа\r\n                               onClick={() => onClickCategory(index)}>{item}</li>\r\n                })}\r\n\r\n            </ul>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Categories;","import React, {useEffect, useRef, useState} from 'react';\r\n\r\ntype SortItemType = {\r\n    name: 'популярности' | 'цене' | 'алфавиту',\r\n    type: any\r\n    order: 'asc' | 'desc'\r\n}\r\ntype PropsType = {\r\n    onClickSortType: (index: SortItemType) => void\r\n    activeSort: string\r\n    items: Array<SortItemType>\r\n}\r\n\r\n\r\nconst SortPopup = React.memo(({activeSort, onClickSortType, items}: PropsType) => {\r\n        const [isVisiblePopup, setIsVisiblePopup] = useState<boolean>(false)\r\n        const sortRef = useRef<any>()\r\n\r\n\r\n        const activeLabel =   items.find(obj => obj.type === activeSort)!.name // this object always will have 'name'\r\n\r\n        const showTogglePopup = () => {\r\n            setIsVisiblePopup(!isVisiblePopup)\r\n        }\r\n        const setActiveItemHandle = (obj: SortItemType) => {\r\n            onClickSortType(obj)\r\n            setIsVisiblePopup(false)\r\n        }\r\n        const handleOutsideClick = (e: MouseEvent & {path?:  EventTarget[]} ) => {\r\n\r\n            const path = e.path || (e.composedPath && e.composedPath())\r\n            if (!path.includes(sortRef.current)) { //при клике на сортировку окно закрываться не будет\r\n                setIsVisiblePopup(false)\r\n            }\r\n\r\n        }\r\n        useEffect(() => {\r\n            document.body.addEventListener('click', handleOutsideClick)\r\n        })\r\n\r\n\r\n        return (\r\n            <div\r\n                ref={sortRef} className=\"sort\">\r\n                <div className=\"sort__label\">\r\n                    <svg\r\n                        className={isVisiblePopup ? 'rotated' : ''}\r\n                        width=\"10\"\r\n                        height=\"6\"\r\n                        viewBox=\"0 0 10 6\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                            fill=\"#2C2C2C\"\r\n                        />\r\n                    </svg>\r\n                    <b>Сортировка по:</b>\r\n                    <span onClick={showTogglePopup}>{activeLabel}</span>\r\n                </div>\r\n                {\r\n                    isVisiblePopup\r\n                    &&\r\n                    <div className=\"sort__popup\">\r\n                        <ul>\r\n\r\n                            {items && items.map((obj, index) => {\r\n                                return <li\r\n                                    onClick={() => setActiveItemHandle(obj)}\r\n                                    className={index === obj.type ? 'active' : ''}\r\n                                    key={`${obj.type}_${index}`}>{obj.name}\r\n\r\n                                </li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n);\r\nexport default SortPopup;","import React, {useState} from 'react';\r\nimport classNames from 'classnames';\r\nimport Button from \"./Button\";\r\nimport {onAddPizzaType} from \"../types/types\";\r\n\r\ntype PropsType = {\r\n    id: number,\r\n    imageUrl: string,\r\n    name: string,\r\n    types: Array<number>,\r\n    sizes: Array<number>,\r\n    price: number,\r\n    onClickAddPizza: (obj: onAddPizzaType) => void\r\n    addedCount: number\r\n}\r\n\r\nconst PizzaBlock = (obj: PropsType) => {\r\n    const {id, imageUrl, name, sizes, price, types, onClickAddPizza, addedCount} = obj\r\n\r\n    const availableTypes = ['тонкое', 'традиционное']\r\n    const availableSizes = [26, 30, 40]\r\n\r\n    const [activeType, setActiveType] = useState(types[0])\r\n    const [activeSize, setActiveSize] = useState<number>(0)\r\n\r\n    const changeSizeHandle = (index: number) => {\r\n        setActiveSize(index)\r\n    }\r\n    const onSelectType = (index: number) => {\r\n        setActiveType(index)\r\n    }\r\n    const onAddPizza = () => {\r\n        const obj = {\r\n            id,\r\n            name,\r\n            imageUrl,\r\n            price,\r\n            size: availableSizes[activeSize],\r\n            type: availableTypes[activeType]\r\n        }\r\n        onClickAddPizza(obj)\r\n    }\r\n\r\n    return (\r\n        <div className=\"pizza-block\">\r\n            <img\r\n                className=\"pizza-block__image\"\r\n                src={imageUrl}\r\n                alt=\"Pizza\"\r\n            />\r\n            <h4 className=\"pizza-block__title\">{name}</h4>\r\n            <div className=\"pizza-block__selector\">\r\n                <ul>\r\n                    {availableTypes.map((t, index) => {\r\n                        return <li key={`${t}_${index}`}\r\n                                   onClick={() => onSelectType(index)}\r\n                                   className={classNames({\r\n                                       active: activeType === index,\r\n                                       disabled: !types.includes(index)\r\n                                   })}\r\n\r\n                        >\r\n                            {t}\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n                <ul>\r\n                    {availableSizes.map((s, index) => {\r\n                        return <li key={`${s}_${index}`}\r\n                                   onClick={() => changeSizeHandle(index)}\r\n                                   className={classNames({\r\n                                       active: activeSize === index,\r\n                                       disabled: !sizes.includes(s)\r\n                                   })}\r\n                        >\r\n                            {s} см.\r\n                        </li>\r\n                    })}\r\n\r\n                </ul>\r\n            </div>\r\n            <div className=\"pizza-block__bottom\">\r\n                <div className=\"pizza-block__price\">{price} ₽</div>\r\n                <Button className=\" button--add\" outline\r\n                        onClick={onAddPizza}>\r\n                    <svg\r\n                        width=\"12\"\r\n                        height=\"12\"\r\n                        viewBox=\"0 0 12 12\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                            fill=\"white\"\r\n                        />\r\n                    </svg>\r\n                    <span>Добавить</span>\r\n                    {addedCount && <i>{addedCount}</i>}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default PizzaBlock;","import React from \"react\"\r\nimport ContentLoader from \"react-content-loader\"\r\n\r\nconst PizzaLoadingBlock = (props:any) => (\r\n    <ContentLoader\r\n        className='pizza-block'\r\n        speed={2}\r\n        width={280}\r\n        height={460}\r\n        viewBox=\"0 0 280 460\"\r\n        backgroundColor=\"#f3f3f3\"\r\n        foregroundColor=\"#ecebeb\"\r\n        {...props}\r\n    >\r\n        <circle cx=\"140\" cy=\"140\" r=\"140\" />\r\n        <rect x=\"0\" y=\"286\" rx=\"3\" ry=\"3\" width=\"280\" height=\"25\" />\r\n        <rect x=\"0\" y=\"320\" rx=\"6\" ry=\"6\" width=\"280\" height=\"84\" />\r\n        <rect x=\"0\" y=\"417\" rx=\"3\" ry=\"3\" width=\"91\" height=\"35\" />\r\n        <rect x=\"40\" y=\"443\" rx=\"0\" ry=\"0\" width=\"2\" height=\"9\" />\r\n        <rect x=\"140\" y=\"410\" rx=\"20\" ry=\"20\" width=\"139\" height=\"45\" />\r\n    </ContentLoader>\r\n)\r\nexport default PizzaLoadingBlock","import {OrderPizzaType, TypePizzaType} from \"../types/types\";\r\n\r\nexport type filterStateType = {\r\n    sortBy: {\r\n        type: TypePizzaType,\r\n        order: OrderPizzaType\r\n    },\r\n    category: null | number\r\n}\r\n\r\nconst initialState: filterStateType = {\r\n    sortBy: {\r\n        type: 'popular',\r\n        order: 'desc'\r\n    },\r\n    category: null\r\n}\r\n\r\n//action types\r\ntype setSortByType = ReturnType<typeof setSortBy>\r\ntype setCategoryType = ReturnType<typeof setCategory>\r\n\r\ntype ActionsType = setSortByType | setCategoryType\r\n\r\nexport const filtersReducer = (state = initialState, action:ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SET_SORT_BY': {\r\n            return {...state, sortBy: action.payload}\r\n        }\r\n        case 'SET_CATEGORY': {\r\n            return {...state, category: action.payload}\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n//action\r\nexport const setSortBy = ({type, order}:any) => ({type: 'SET_SORT_BY', payload: {type, order}} as const)\r\nexport const setCategory = (cartIndex:number) => ({type: 'SET_CATEGORY', payload: cartIndex} as const)\r\n\r\nexport default filtersReducer;","import axios from \"axios\";\r\n\r\nexport const pizzaAPI = {\r\n    getPizza: (sortBy, category) => {\r\n\r\n\r\n        // return axios.get(`https://kalinskiy.github.io/pizza/db.json/pizzas?${\r\n        //     category !== null ? `category=${category}` : ''}&_sort=${sortBy.type}&_order=${sortBy.order}`).then(res => res.data)\r\n        return axios.get(`https://kalinskiy.github.io/pizza/db.json/?${\r\n            category !== null ? `category=${category}` : ''}&_sort=${sortBy.type}&_order=${sortBy.order}`).then(res => res.data)\r\n    }\r\n}","const initialState = {\r\n    isLoaded: false\r\n}\r\nexport type SetPreloaderType = ReturnType<typeof setPreloader>\r\ntype ActionTypes = SetPreloaderType\r\n\r\nexport const appReducer = (state = initialState, action:ActionTypes) => {\r\n    switch (action.type) {\r\n\r\n        case 'SET_PRELOADER': {\r\n            return {...state, isLoaded: action.payload}\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n//action\r\nexport const setPreloader = (preloader:boolean) => ({type: 'SET_PRELOADER', payload: preloader})\r\n\r\n//thunk\r\n\r\nexport default appReducer;","import {pizzaAPI} from \"../api/api\";\r\nimport {setPreloader, SetPreloaderType} from \"./app-reducer\";\r\nimport {OrderPizzaType, PizzaType, TypePizzaType} from \"../types/types\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nconst initialState = {\r\n    pizzas: [],\r\n}\r\ntype InitialStateType = {\r\n    pizzas: Array<PizzaType>\r\n}\r\ntype SetPizzasType = ReturnType<typeof setPizzas>\r\n\r\ntype ActionTypes = SetPizzasType\r\n\r\nexport const pizzaReducer = (state:InitialStateType = initialState, action: ActionTypes):InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_PIZZAS': {\r\n            return {...state, pizzas: action.payload}\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n//action\r\nexport const setPizzas = (pizzas: PizzaType[]) => ({type: 'SET_PIZZAS', payload: pizzas})\r\n\r\n//thunk\r\nexport const fetchPizzas = (sortBy: { type: TypePizzaType, order: OrderPizzaType }, category: null | number) => async (dispatch: Dispatch) => {\r\n    dispatch(setPreloader(false))\r\n    try {\r\n        const res = await pizzaAPI.getPizza(sortBy, category)\r\n        dispatch(setPizzas(res))\r\n        dispatch(setPreloader(true))\r\n\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n\r\n}\r\n","import {CartItemsType, ObjectInnerCartType, onAddPizzaType, PizzaType} from \"../types/types\";\r\n\r\n\r\nexport type CartStateType =  typeof initialState\r\nconst initialState = {\r\n    items: {} as CartItemsType,\r\n    totalPrice: 0,\r\n    totalCount: 0\r\n}\r\n//action types\r\ntype AddPizzaType = ReturnType<typeof addPizza>\r\ntype ClearCartType = ReturnType<typeof clearCart>\r\ntype RemoveCartItemType = ReturnType<typeof removeCartItem>\r\ntype PlusItemType =  ReturnType<typeof plusItem>\r\ntype MinusItemType = ReturnType<typeof minusItem>\r\n\r\ntype ActionsType = AddPizzaType | ClearCartType | RemoveCartItemType | PlusItemType | MinusItemType\r\n\r\n\r\n\r\n\r\nconst getTotalPrice = (arr: (ObjectInnerCartType | onAddPizzaType | PizzaType)[]) => {\r\n    return arr.reduce((sum, obj) => obj.price + sum, 0)\r\n}\r\n\r\n\r\nconst _get = (obj:any, path:any) => {\r\n    const [firstKey, ...keys] = path.split('.');\r\n    return keys.reduce((val:any, key:string) => {\r\n        return val[key];\r\n    }, obj[firstKey]);\r\n};\r\n\r\nconst getTotalSum = (obj: { [p: number]: { totalPrice: number; items: (ObjectInnerCartType | onAddPizzaType)[]}; [p: string]: { totalPrice: number; items: (ObjectInnerCartType | onAddPizzaType)[] } }, path: any) => {\r\n    return Object.values(obj).reduce((sum, obj) => {\r\n        const value = _get(obj, path);\r\n        return sum + value;\r\n    }, 0);\r\n};\r\n\r\nexport const cartReducer = (state:CartStateType = initialState, action:ActionsType) => {\r\n    switch (action.type) {\r\n        case 'ADD_PIZZA': {\r\n\r\n            const currentPizzaItems = !state.items[action.payload.id]\r\n                ? [action.payload]\r\n                : [...state.items[action.payload.id].items, action.payload];\r\n\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload.id]: {\r\n                    items: currentPizzaItems,\r\n                    totalPrice: getTotalPrice(currentPizzaItems),\r\n                }\r\n            }\r\n\r\n            const totalCount = getTotalSum(newItems, 'items.length');\r\n            const totalPrice = getTotalSum(newItems, 'totalPrice')\r\n            // const items = Object.values(newItems).map(obj => obj.items)\r\n            // const allPizzas = items.flat()\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                // itemsCount: allPizzas.length,\r\n                // totalPrice: getTotalPrice(allPizzas)\r\n                totalCount: totalCount,\r\n                totalPrice: totalPrice\r\n            }\r\n        }\r\n        case 'CLEAR_CART': {\r\n            return {\r\n                ...state,\r\n                items: {},\r\n                totalPrice: 0,\r\n                totalCount: 0\r\n            }\r\n        }\r\n        case 'REMOVE_CART_ITEM': {\r\n            const newItems = {...state.items}\r\n            const currentTotalPrice = newItems[action.payload].totalPrice;\r\n            const currentTotalCount = newItems[action.payload].items.length;\r\n            delete newItems[action.payload]\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalPrice: state.totalPrice - currentTotalPrice,\r\n                totalCount: state.totalCount - currentTotalCount\r\n            }\r\n\r\n        }\r\n        case 'PLUS_CART_ITEM' : {\r\n            const newObjectItems = [...state.items[action.payload].items, state.items[action.payload].items[0]]\r\n\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload]: {\r\n                    items: newObjectItems,\r\n                    totalPrice: getTotalPrice(newObjectItems)\r\n                }\r\n            }\r\n            const totalCount = getTotalSum(newItems, 'items.length');\r\n            const totalPrice = getTotalSum(newItems, 'totalPrice')\r\n\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalPrice: totalPrice,\r\n                totalCount: totalCount\r\n            }\r\n        }\r\n        case 'MINUS_CART_ITEM': {\r\n            const oldItems = [...state.items[action.payload].items]\r\n            const newObjectItems = oldItems.length > 1 ? [...state.items[action.payload].items].slice(1) : oldItems;\r\n\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload]: {\r\n                    items: newObjectItems,\r\n                    totalPrice: getTotalPrice(newObjectItems)\r\n                }\r\n            }\r\n            const totalCount = getTotalSum(newItems, 'items.length');\r\n            const totalPrice = getTotalSum(newItems, 'totalPrice')\r\n\r\n\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalCount: totalCount,\r\n                totalPrice: totalPrice\r\n\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n//action\r\n\r\nexport const addPizza = (obj: onAddPizzaType) => ({type: 'ADD_PIZZA', payload: obj}as const)\r\nexport const clearCart = () => ({type: 'CLEAR_CART'}as const)\r\nexport const removeCartItem = (id:number) => ({type: 'REMOVE_CART_ITEM', payload: id}as const)\r\nexport const plusItem = (id:number) => ({type: 'PLUS_CART_ITEM', payload: id}as const)\r\nexport const minusItem = (id:number) => ({type: 'MINUS_CART_ITEM', payload: id}as const)\r\n\r\n//thunk\r\n\r\nexport default cartReducer;","import React, {useCallback, useEffect} from 'react';\r\nimport {Categories, PizzaBlock, SortPopup} from \"../components\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {filterStateType, setCategory, setSortBy} from \"../redux/filters-reducer\";\r\nimport {fetchPizzas} from \"../redux/pizza-reducer\";\r\nimport PizzaLoadingBlock from \"../components/PizzaLoadingBlock\";\r\nimport {addPizza} from \"../redux/cart-reducer\";\r\nimport {AppStateType} from \"../redux/store\";\r\nimport {CartItemsType, onAddPizzaType, PizzaType} from \"../types/types\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const pizzas = useSelector<AppStateType, Array<PizzaType>>(state => state.pizza.pizzas)\r\n    const cartItems = useSelector<AppStateType, CartItemsType>(state => state.cart.items)\r\n    const isLoaded = useSelector<AppStateType, boolean>(state => state.app.isLoaded)\r\n    const {category, sortBy} = useSelector<AppStateType, filterStateType>(state => state.filter)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPizzas(sortBy, category))\r\n\r\n    }, [sortBy, category])\r\n\r\n    const categoriesNames = ['Мясные', 'Вегетарианская', 'Гриль', 'Острые', 'Закрытые']\r\n\r\n    const onSelectCategory = useCallback((index) => {\r\n        dispatch(setCategory(index))\r\n    }, [dispatch])\r\n\r\n    const onSelectSortType = useCallback((type) => {\r\n        dispatch(setSortBy(type))\r\n    }, [dispatch])\r\n\r\n    const handleAddPizza = (obj: onAddPizzaType) => {\r\n        dispatch(addPizza(obj))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content__top\">\r\n                <Categories\r\n                    activeCategory={category}\r\n                    onClickCategory={(index: number | null) => onSelectCategory(index)}\r\n                    items={categoriesNames}\r\n                />\r\n                <SortPopup\r\n                    onClickSortType={onSelectSortType}\r\n                    activeSort={sortBy.type}\r\n                    items={[\r\n                        {name: 'популярности', type: 'popular', order: 'desc'},\r\n                        {name: 'цене', type: 'price', order: 'desc'},\r\n                        {name: 'алфавиту', type: 'name', order: 'asc'},\r\n\r\n                    ]}\r\n                />\r\n            </div>\r\n            <h2 className=\"content__title\">Все пиццы</h2>\r\n            <div className=\"content__items\">\r\n                {isLoaded\r\n                    ? pizzas.map((obj:PizzaType) => {\r\n                        return <PizzaBlock\r\n                            key={obj.id}\r\n                            addedCount={cartItems[obj.id] && cartItems[obj.id].items.length}\r\n                            onClickAddPizza={handleAddPizza}\r\n                            {...obj}/>\r\n                    })\r\n                    : Array(12).fill(0).map((_, index) => <PizzaLoadingBlock key={index}/>)}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport Button from \"./Button\";\r\nimport {NamePizzaType, SizePizzaType, TypePizzaType} from \"../types/types\";\r\n\r\ntype PropsType = {\r\n    id: number,\r\n    name: NamePizzaType,\r\n    size: SizePizzaType,\r\n    type: TypePizzaType\r\n    totalPrice: number\r\n    totalCount: number\r\n    removePizzaItem: (id: number) => void\r\n    plusCartItem: (id: number) => void\r\n    minusCartItem: (id: number) => void\r\n\r\n\r\n}\r\nconst CartItem = ({id, name, size, type, totalPrice, totalCount, removePizzaItem, plusCartItem, minusCartItem}: PropsType) => {\r\n\r\n    const handleRemoveClick = () => {\r\n        removePizzaItem(id)\r\n    }\r\n    const handleMinusClick = () => {\r\n        minusCartItem(id)\r\n    }\r\n    const handlePlusClick = () => {\r\n        plusCartItem(id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"cart__item\">\r\n            <div className=\"cart__item-img\">\r\n                <img\r\n                    className=\"pizza-block__image\"\r\n                    src=\"https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/b750f576-4a83-48e6-a283-5a8efb68c35d.jpg\"\r\n                    alt=\"Pizza\"\r\n                />\r\n            </div>\r\n            <div className=\"cart__item-info\">\r\n                <h3>{name}</h3>\r\n                <p>{type}, {size} см.</p>\r\n            </div>\r\n            <div className=\"cart__item-count\">\r\n                <Button className='button--circle' outline={true} onClick={handleMinusClick}>\r\n\r\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                    </svg>\r\n\r\n\r\n                </Button>\r\n                <b>{totalCount}</b>\r\n                <Button className='button--circle' outline={true} onClick={handlePlusClick}>\r\n\r\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                    </svg>\r\n\r\n\r\n                </Button>\r\n            </div>\r\n            <div className=\"cart__item-price\">\r\n                <b>{totalPrice} ₽</b>\r\n            </div>\r\n            <div className=\"cart__item-remove\">\r\n                <Button onClick={handleRemoveClick} outline={true} className='button--circle'>\r\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                    </svg>\r\n                </Button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartItem;","export default __webpack_public_path__ + \"static/media/empty-cart.db905d1f.png\";","import React from 'react';\r\nimport emptyCartImage from '../assets/img/empty-cart.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst CartEmpty = () => {\r\n    return (\r\n\r\n        <div className=\"cart cart--empty\">\r\n            <h2>Корзина пустая <span>😕</span></h2>\r\n            <p>\r\n                Вероятней всего, вы не заказывали ещё пиццу.<br/>\r\n                Для того, чтобы заказать пиццу, перейди на главную страницу.\r\n            </p>\r\n            <img src={emptyCartImage} alt=\"Empty cart\"/>\r\n            <NavLink to='/' className=\"button button--black\">\r\n                <span>Вернуться назад</span>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartEmpty;","import React from 'react';\r\nimport CartItem from \"../components/CartItem\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {CartStateType, clearCart, minusItem, plusItem, removeCartItem} from \"../redux/cart-reducer\";\r\nimport CartEmpty from \"../components/CartEmpty\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"../components/Button\";\r\nimport {AppStateType} from \"../redux/store\";\r\n\r\nconst Cart = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const {totalPrice, totalCount, items} = useSelector<AppStateType, CartStateType>(state => state.cart)\r\n\r\n    const addedPizzas = Object.keys(items).map((key) => {\r\n        // @ts-ignore\r\n        return items[key].items[0];\r\n    })\r\n    const clearCartHandle = () => {\r\n        dispatch(clearCart())\r\n    }\r\n    const removePizzaItem = (id:number) => {\r\n        dispatch(removeCartItem(id))\r\n    }\r\n    const plusCartItem = (id:number) => {\r\n        dispatch(plusItem(id))\r\n    }\r\n    const minusCartItem = (id:number) => {\r\n        dispatch(minusItem(id))\r\n    }\r\n    const onOrderClick = () => {\r\n        alert('Ваш заказ принят')\r\n    }\r\n    return (\r\n        <div className=\"content\">\r\n\r\n            <div className=\"container container--cart\">\r\n                {totalPrice\r\n                    ?\r\n                    <div className=\"cart\">\r\n                        <div className=\"cart__top\">\r\n                            <h2 className=\"content__title\">\r\n                                <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\"\r\n                                     xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                        stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                    <path\r\n                                        d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                        stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                    <path\r\n                                        d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                        stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                </svg>\r\n                                Корзина\r\n                            </h2>\r\n                            <div className=\"cart__clear\">\r\n                                <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"\r\n                                     xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M2.5 5H4.16667H17.5\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"/>\r\n                                    <path\r\n                                        d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\r\n                                        stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"/>\r\n                                    <path d=\"M8.33337 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                                          strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                    <path d=\"M11.6666 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                                          strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                </svg>\r\n\r\n                                <span onClick={clearCartHandle}>Очистить корзину</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"content__items\">\r\n\r\n                            {addedPizzas.map(obj => {\r\n                                return <CartItem\r\n                                    key={obj.id}\r\n                                    id={obj.id}\r\n                                    name={obj.name}\r\n                                    size={obj.size}\r\n                                    type={obj.type}\r\n                                    totalPrice={items[obj.id].totalPrice}\r\n                                    totalCount={items[obj.id].items.length}\r\n                                    removePizzaItem={removePizzaItem}\r\n                                    plusCartItem={plusCartItem}\r\n                                    minusCartItem={minusCartItem}\r\n\r\n                                />\r\n                            })}\r\n\r\n                        </div>\r\n                        <div className=\"cart__bottom\">\r\n                            <div className=\"cart__bottom-details\">\r\n                                <span> Всего пицц: <b>{totalCount} шт.</b> </span>\r\n                                <span> Сумма заказа: <b>{totalPrice} ₽</b> </span>\r\n                            </div>\r\n                            <div className=\"cart__bottom-buttons\">\r\n                                <NavLink to=\"/\" className=\"button button--outline button--add go-back-btn\">\r\n                                    <svg width=\"8\" height=\"14\" viewBox=\"0 0 8 14\" fill=\"none\"\r\n                                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path d=\"M7 13L1 6.93015L6.86175 1\" stroke=\"#D3D3D3\" strokeWidth=\"1.5\"\r\n                                              strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                    </svg>\r\n                                    <NavLink to='/'>\r\n                                        <span>Вернуться назад</span>\r\n                                    </NavLink>\r\n                                </NavLink>\r\n                                <Button className=\"button pay-btn\" onClick={onOrderClick}>\r\n                                    <span>Оплатить сейчас</span>\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    : <CartEmpty/>}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;","import './App.css';\nimport Header from \"./components/Header\";\nimport {Cart, Home} from \"./pages\";\nimport {Route} from \"react-router-dom\";\n\n\nfunction App() {\n\n\n    return (\n        <div className=\"wrapper\">\n\n            <Header/>\n            <div className=\"content\">\n                <Route exact path={'/'} render={() => <Home/>}/>\n                <Route path={'/cart'} render={() => <Cart/>}/>\n            </div>\n        </div>\n    );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\nimport {filtersReducer} from \"./filters-reducer\";\r\nimport {pizzaReducer} from \"./pizza-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {cartReducer} from \"./cart-reducer\";\r\nimport thunkMiddleWare from 'redux-thunk';\r\n\r\n\r\nconst reducers = combineReducers({\r\n    filter: filtersReducer,\r\n    pizza:pizzaReducer,\r\n    app:appReducer,\r\n    cart:cartReducer\r\n\r\n})\r\nexport type AppStateType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// @ts-ignore\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './scss/app.scss'\nimport {BrowserRouter} from \"react-router-dom\";\nimport {store} from \"./redux/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n;\n\nreportWebVitals();\n"],"sourceRoot":""}